---
stand_alone: true
ipr: trust200902
docname: draft-koster-t2trg-hypertext-language-00
cat: info
pi:
  strict: 'yes'
  toc: 'yes'
  tocdepth: '3'
  symrefs: 'yes'
  sortrefs: 'yes'
  compact: 'yes'
  comments: yes
  subcompact: 'no'
  iprnotified: 'no'
title: Model-Based Hypertext Language
area: Internet
wg: T2TRG
kw: T2TRG, Web of Things, Hypermedia, Semantic Interoperability
date: 2016-2-20
author:
- ins: M. Koster
  name: Michael Koster
  org: SmartThings
  street: 1281 Lawrence Station Road
  city: Sunnyvale
  code: '94089'
  country: USA
  phone: "+1-707-502-5136"
  email: michael.koster@smartthings.com
normative:
informative:
  RFC6690:
  I-D.ietf-core-links-json:
  RFC3986:
  RFC5988:
  RFC7252:
  I-D.ietf-core-interfaces: 
  I-D.ietf-core-resource-directory: 
  REST:
    target: http://www.ics.uci.edu/~fielding/pubs/dissertation/fielding_dissertation.pdf
    title: Architectural Styles and the Design of Network-based Software Architectures
    author:
        ins: R. Fielding
        name: Roy Thomas Fielding
        org: University of California, Irvine
    date: 2000
    seriesinfo:
      "Ph.D.": "Dissertation, University of California, Irvine"
    format:
      PDF: http://www.ics.uci.edu/~fielding/pubs/dissertation/fielding_dissertation.pdf

--- abstract

Interoperability for connected things is improving in a number of important areas, converging around Internet Protocol (IP) and internet-like design patterns. Hypermedia is becoming more common with web linking becoming part of a number of important standards. 

However, there is still an interoperability gap in how application semantics are defined and used. Many organizations and industry alliances are defining vocabulary and taxonomy for application domains, independent of each other. These vocabularies are often bound to particular conceptual models, and are often semantically incompatible with each other. While it may be possible to adapt protocols and convert representations, it is difficult to develop a common application framework that works across ecosystems and domains.

This article proposes a method that can be reused across application domains and across ecosystems, to define a shared conceptual model and common vocabulary. A public resource is described which does for connected things what schema.org does for web commerce, namely provide a community driven vocabulary and simple ontology that enables web scale interoperability between applications and connected things.

--- middle

# Introduction {#introduction}

Interoperability for connected things is improving with the adoption of Internet Protocol (IP) in a number of emerging standards and ecosystems. OCF, Allseen, Thread Alliance and ZigBee, Bluetooth SIG, OMA LWM2M, IPSO Alliance, Nest Weave, and WiFi connected devices.

Consolidation is being seen in the adoption of HTTP and CoAP by these ecosystems. Many emerging standards support some form of web linking or resource directory (OCF, LWM2M, RFC6690, CoRE RD). Use of REST is becoming common, particularly for web integration and more recently at the device API and local network level (OCF, LWM2M). There is ongoing work in providing hypermedia support (IETF, OCF, W3C, T2TRG). Hypertext based systems can use link attributes to incorporate application semantics. 

For application semantics, many organizations and alliances are creating new vocabularies bound to their own models. This can result in application incompatibility, for example an identifier like temperature may appear to be well known but is semantically incompatible across ecosystems and application domains. 

# Conceptual Models and Domain Specific Language

The proposed approach to semantic interoperability is to develop a common semantic structure and language upon which to develop domain specific vocabularies that can be used for semantic annotation of resources and services.

For the purpose of this discussion, a language is assumed to consist of a vocabulary which is bound to a conceptual model. Such a conceptual model constrains and defines the grammar and semantics of the language. 

Conceptual models are layered, with core concepts forming a basis on which to build more sophisticated models. In the case of human language, we are used to a set of conceptual fragments like nouns, verbs, adjectives, and so on to express thoughts and feelings when we interact with one another. 

For interacting with connected things, there is a conceptual model in common use that is proposed by (W3C).  Using this model a connected Thing is defined by and interacted with through its Events, Actions, and Properties. Events can be considered to be state changes within the thing we may be interested in. Actions can be invoked when we want the thing to change its state or the state of its environment, like turn on a light. Properties are like the current state of a thing or its static attributes. 

Events, Actions, and Properties can form the basis of a simple, consistent conceptual framework upon which to build a general interaction language for things. We can ask a thing about itâ€™s properties, we can observe events that change the state of the thing or indicate changes in its environment, and we can ask it to perform actions for us to change its state or its environment.

Semantic interoperability may be achieved through common definitions of cross domain meta models and domain specific models, and shared vocabulary to describe the events, actions, and properties of connected things. For example, in the connected lighting domain, we may model a luminary as a thing that has various optional capabilities, like brightness control, color control, on/off control, and measurement of energy consumed. A common set of events, actions, and properties can be defined for all connected lights that have particular capabilities. By doing so, we enable control of any light using a common set of application level controls and affordances. 

# Reference Architecture

Figure 1 shows an example system architecture for broad interoperability at web scale. 

~~~~
                                           +--------------+
          +------------------------------->| Applications |
          |                                +--------------+
          |                                |   Protocols  |
          |                                +--------------+
          |                                |   Hypertext  |
    +-----------+     +--------------+     +--------------+
    |  Schemas  |---->| Domain Model |---->|    Things    |
    +-----------+     +--------------+     +--------------+

~~~~
{: #fig-arch title='Reference Architecture' align="left"}

Schemas are publicly available domain specific meta-models, built through community consensus by domain experts and industry users. A working example of this today is [schema.org], which is a public vocabulary and ontology for interoperable web commerce. Applications use schemas to develop machine comprehensions of the hypertext controls and affordances exposed by connected things.

Domain Models are built from schemas by manufacturers or data suppliers. Domain Models represent instances or specific types of products or information assets. A Domain Model would generally be used to construct a virtual thing or an interface to a thing.

Hypertext is exposed or referenced by things, and is used to bind vocabulary terms from the schema to instances of the Domain Model. Hypertext is made available in-band through the application protocol, for example CoAP or HTTP. 

Protocols represent common network capability, for example Thread, WiFi, Internet, and underlying protocols TCP/IP, UDP, and common application protocols CoAP, HTTP, as well as ecosystem protocol layers like OCF and LWM2M. 

Applications are the external logic and programs used to remotely control and orchestrate the activities of connected things. Domain specific vocabulary is exposed directly to applications through hypertext exposed through the application protocol.

Application level interoperability is achieved by applications understanding the semantics of the common underlying conceptual model and interpreting the vocabulary that describes domain specific instances of that conceptual model. In the context of common application semantics, network and application protocols are relatively easy to adapt between ecosystems.

Hypertext, Hypermedia
Model
Conceptual Model
Schema

W3C WoT
T2TRG
OCF
Thread
ZigBee Application Clusters
Bluetooth SIG
OMA LWM2M
IPSO Alliance
Nest Weave
Hypertext (Fielding)
Hypermedia Demonstrator

# Terminology {#terminology}

Ecosystem
:    Referring to a standard or platform supported by a corporate entity or an industry alliance or consortium.

Semantic Interoperability
:    The ability for applications to understand 

Application Domain
:    A group of applications that share common
{: vspace='0'}

--- back

